- 알고리즘
: 문제를 해결하기 위한 절차나 방법
    
    의사코드(슈도코드)와 순서도
    컴터에서 알고리즘을 표현하는 방법
    
    성능
    
    - 정확성 : 얼마나 정확하게 동작하는가
    - 작업량 : 얼마나 적은 연산으로 원하는 결과를 얻어내는가
    - 메모리사용량 : 얼마나 적은 메모리를 사용하는가
    - 단순성 : 얼마나 단순한가
    - 최적성 : 더 이상 개선할 여지없이 최적화되었는가
    
    ( 아래로 내려올수록 난이도 높아짐)
    
    시간 복잡도
    
    빅-오 표기법 : 가장 큰 영향력을 주는 n에 대한 항만을 표시
                              계수는 생략하여 표시
    
- 배열(Array)
: 일정한 자료형의 변수들을 하나의 이름으로 열거하여 사용하는 자료구조
    
    여러개의 변수가 필요할때
    
    단순히 다수의 변수 선언을 의미하는 것이 아님
    
    1차원배열
    
    ex) arr = list() / arr = [] / arr[0] * 10 / arr = [1,2,3]
    
    정수 N을 입력받고, 공백으로 구분된 정수들을 리스트로 입력받는 코드
    
    ```python
    N = int(input())
    arr = list(map(int, input().split()))
    ```
    
    배열 원소의 합을 계산하는 코드
    
    ```python
    s = 0
    for i in range(N):       # for x in arr:
    s += arr[i]             #          s += x
    ```
    
    배열 원소의 최댓값을 찾는 코드
    
    ```python
    max_v = arr[0]   # 첫 원소를 최대로 가정
    for i in range(1, N):
    		if max_v < arr[i]:
    				max_v = arr[i]  # arr[i]가 더 크면 max_v 갱신
    ```
    
    배열 원소중 최댓값의 인덱스 max_idx 찾는 코드
    
    ```python
    max_idx = 0   # 첫 원소를 최대로 가정
    for i in range(1, N):
    		if arr[max_idx] < arr[i]:
    	#	if arr[max_idx[ <= arr[i]: 최댓값이 여러 개인 경우에는 이렇게
    				max_idx = arri  # 더 큰 값을 만나면 max_idx 갱신
    ```
    
    배열 원소의 최댓값의 마지막 인덱스를 찾는 코드
    
    ```python
    idx = -1              # 찾는 값이 없다고 가정
    for i in range(N):
    		if arr[i] == V:   # arr[i]가 찾는 값이면
    				idx = i       # 인덱스 저장
    				break         # for i
    ```
    
- 버블정렬
: 인접한 두 개의 원소를 비교하며 자리를 계속 교환하는 방식
    
    시간 복잡도 : O(n^2)
    
    알고리즘
    
    ```python
    	def bubble_sort(a, N):            # 정렬할 List, N 원소 수
          for i in range(N-1, 0, -1):   # 뒤에서 앞으로 하나씩 줄어들며 반복
    	       for j in range(i):         # 비교할 왼쪽 원소 인덱스j
    	           if a[j] > a[j+1]     
    	            a[j], a[j+1] = a[j+1], a[j]  
    ```
    

오늘의 실습

- map함수 다지자
- list쓸때 slice 같은거 잘 쓰자
    
    
- 디버깅 vscode 세팅
    
    ![스크린샷 2025-08-04 174156.png](attachment:f8e8cde1-e70e-4046-a0de-c0e37a47aeaa:스크린샷_2025-08-04_174156.png)
    
    ![스크린샷 2025-08-04 174210.png](attachment:03b6baa0-99d8-4fab-8221-641d75efc50f:스크린샷_2025-08-04_174210.png)
    
    jupyter 확장팩 설치하고 execute selection 체크
    
    Keyboard shortcuts에서 그림처럼 ctrl+enter 로 설정
    
    코드에서 cell 실행할땐 shift + enter
    라인이나 변수만 드래그해서 실행할땐 ctrl + enter